<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pt.ptuser.mapper.SysMenuMapper">
  <resultMap id="BaseResultMap" type="com.pt.ptuser.entity.SysMenu">
    <!--@mbg.generated-->
    <!--@Table dealer_menu-->
    <id column="menu_id"  property="menuId" />
    <result column="menu_name" property="menuName" />
    <result column="parent_id" property="parentId" />
    <result column="order_num" property="orderNum" />
    <result column="path"  property="path" />
    <result column="component" property="component" />
    <result column="is_frame"  property="isFrame" />
    <result column="menu_type"  property="menuType" />
    <result column="visible" property="visible" />
    <result column="status" property="status" />
    <result column="perms" property="perms" />
    <result column="icon" property="icon" />
    <result column="create_by"  property="createBy" />
    <result column="create_time" property="createTime" />
    <result column="update_by" property="updateBy" />
    <result column="update_time" property="updateTime" />
    <result column="remark" property="remark" />
  </resultMap>

    <resultMap id="MenuTreeVoResultMap" type="com.pt.ptcommon.dto.MenuVO">
        <!--@mbg.generated-->
        <!--@Table dealer_menu-->
        <id column="menu_id"  property="menuId" />
        <result column="menu_name" property="menuName" />
        <result column="parent_id" property="parentId" />
        <result column="order_num" property="orderNum" />
        <result column="path"  property="path" />
        <result column="menu_type"  property="menuType" />
        <result column="perms" property="perms" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <sql id="selectSysMenu">
        select m.menu_id, m.menu_name, m.parent_id, m.order_num, m.path, m.component, m.is_frame, m.menu_type, m.visible, m.status, ifnull(m.perms,'') as perms, m.icon, m.create_time
		from dynamic_menu m
    </sql>

    <select id="selectMenuList"  resultMap="BaseResultMap">
        <include refid="selectSysMenu"/>
        <where>
            m.menu_type in ('M', 'C')
            <if test="menuName != null and menuName != ''">
                AND menu_name like concat('%', #{menuName}, '%')
            </if>
            <if test="visible != null and visible != ''">
                AND visible = #{visible}
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
        </where>
        order by parent_id, order_num
    </select>



    <select id="selectMenuListByUserId"  resultMap="BaseResultMap">
        select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.menu_type, m.icon, m.order_num, m.create_time
        from dynamic_menu m
        left join dynamic_role_menu rm on m.menu_id = rm.menu_id
        left join dynamic_user_role ur on rm.role_id = ur.role_id
        left join dynamic_role ro on ur.role_id = ro.role_id
        where ur.user_id = #{params.userId} and  m.menu_type in ('M', 'C') and m.status = 0
<!--        <if test="menuName != null and menuName != ''">-->
<!--            AND menu_name like concat('%', #{menuName}, '%')-->
<!--        </if>-->
<!--        <if test="visible != null and visible != ''">-->
<!--            AND visible = #{visible}-->
<!--        </if>-->
<!--        <if test="status != null and status != ''">-->
<!--            AND status = #{status}-->
<!--        </if>-->
        order by m.parent_id, m.order_num
    </select>

    <select id="selectMenuListByRoleId"  resultType="string">
        select m.menu_id, m.parent_id
        from dynamic_menu m
        left join dynamic_role_menu rm on m.menu_id = rm.menu_id
        where rm.role_id = #{roleId}
        and m.menu_id not in (select m.parent_id from dynamic_menu m inner join dynamic_role_menu rm on m.menu_id = rm.menu_id and rm.role_id = #{roleId})
        order by m.parent_id, m.order_num
    </select>
  <!-- 通过用户ID，查询角色信息-->
  <select id="listRoutesByRole"  resultMap="BaseResultMap">
<!--    select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.menu_type, m.icon, m.order_num, m.create_time-->
    select distinct m.*
    from dealer_menu m
    left join dealer_role_menu rm on m.menu_id = rm.menu_id
    left join dealer_role ro on rm.role_id = ro.role_id
    where ro.role_code = #{role}
    order by m.parent_id, m.order_num
  </select>
<!-- 通过用户ID，查询角色信息-->
<select id="listMenuByRole"  resultMap="MenuTreeVoResultMap">
    select distinct m.menu_id, m.parent_id, m.menu_name, m.path,m.component, ifnull(m.perms,'') as perms, m.menu_type, m.icon, m.order_num, m.create_time,m.update_time
    from dealer_menu m
    left join dealer_role_menu rm on m.menu_id = rm.menu_id
    left join dealer_role ro on rm.role_id = ro.role_id
    where ro.role_code = #{role} and  m.menu_type in ('M', 'C') and m.status = 0
    order by m.parent_id, m.order_num
</select>
    <!-- 通过用户ID，查询角色信息-->
    <select id="getMenuById" resultMap="BaseResultMap" statementType="STATEMENT">
        SELECT
        m.*
        FROM
        ${clientId}_menu m
        WHERE m.menu_id = '${menuId}'
    </select>
</mapper>